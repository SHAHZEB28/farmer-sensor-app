
services:
  api:
    build: ./Backend
    container_name: field_insights_api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - ./Backend/app:/code/app
      - ./Backend/tests:/code/tests 
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@db/field_insights_db
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:13-alpine
    container_name: postgres_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=field_insights_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d field_insights_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:6-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    networks:
      - app-network

  worker:
    build: ./worker
    container_name: celery_worker
    command: celery -A celery_app worker --loglevel=info
    volumes:
      - ./worker:/worker_code
    environment:
      - DATABASE_URL=postgresql://user:password@db/field_insights_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONPATH=/worker_code
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

  beat:
    build: ./worker
    container_name: celery_beat
    command: celery -A celery_app beat --loglevel=info
    volumes:
      - ./worker:/worker_code
    environment:
      - DATABASE_URL=postgresql://user:password@db/field_insights_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONPATH=/worker_code
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
